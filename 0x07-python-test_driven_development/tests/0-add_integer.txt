The 0-add_integer module:

This module defines an integer addition function add_integer(a, b=98).

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

The function also works with negative values.
    >>> add_integer(2, -3)
    -1

The function also works with floating-point values.
    >>> add_integer(2.0, 2.0)
    4

floats are converted to integers before addition is performed.

    >>> add_integer(2.1)
0-add_integer.txt 2

CASES:
Adding an integer number and a string
    >>> add_integer(4, Koliseyenum)
    Traceback (most recent call last):

0-add_integer.txt       ...
    TypeError: b must be an integer

*Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
0-add_integer.txt       ...
    TypeError: a must be an integer

*Adding a letter and a number
    >>> add_integer('5', 9)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

*Adding two letters
    >>> add_integer('5', '9')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

*Adding a tuple
    >>> add_integer((5, 9))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

*Adding a number and a list
    >>> add_integer(59, [])
    Traceback (most recent call last):
0-add_integer.txt       ...
    TypeError: b must be an integer

*Passing a string
    >>> add_integer(Budybye)
    Traceback (most recent call last):
0-add_integer.txt       ...
    TypeError: a must be an integer

*Subtracting 98 and 1
    >>> add_integer(-5)
    93

EXTRA:
*Case Overflow 1:
    >>> add_integer(float('inf'), 9)
    Traceback (most recent call last):
    0-add_integer.txt       ...
    OverflowError: cannot convert float infinity to integer

*Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    0-add_integer.txt       ...
    OverflowError: cannot convert float infinity to integer

*Case NaN: No input

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    0-add_integer.txt       ...
    ValueError: cannot convert float NaN to integer
